SYNOPSIS
========

This is an approximate sequence pattern matcher for FASTQ/FASTA
files.  One can think of it as being a grep
(http://en.wikipedia.org/wiki/Grep) and agrep
(http://en.wikipedia.org/wiki/Agrep) like tool optimized for FASTQ
and FASTA files. It can work directly on both compressed and
uncompressed file types.

Below is the help message via ('fqgrep -h') describing its usage:

Usage: fqgrep [options] -p <pattern> <fastq_files>
        -h                  This help message   
        -v                  Program and version information
        -p <STRING>         Pattern of interest to grep [REQUIRED]
        -c                  Highlight matching string with color
        -f                  Output matches in FASTA format
        -r                  Output matches in detailed stats report format
        -b <STRING>         Delimiter string to separate columns
                            in detailed stats report [Default: '\t']
        -m <INT>            Total number of mismatches to at most allow for
                            in search pattern [Default: 0]
        -s <INT>            Max threshold of substitution mismatches to allow
                            for in search pattern [Default: unlimited]
        -i <INT>            Max threshold of insertion mismatches to allow for
                            in search pattern [Default: unlimited]
        -d <INT>            Max threshold of deletion mismatches to allow for
                            in search pattern [Default: unlimited]
        -S <INT>            Cost of base substitutions in obtaining
                            approximate match [Default: 1]
        -I <INT>            Cost of base insertions in obtaining
                            approximate match [Default: 1]
        -D <INT>            Cost of base deletions in obtaining
                            approximate match [Default: 1]
        -e                  Force tre regexp engine usage
        -C                  Display only a total count of matches
                            (per input FASTQ file)
        -o <out_file>       Desired output file.
                            If not specified, defaults to stdout

PREREQUISITES
=============

"fqgrep" depends upon the following libraries:

  * TRE Regular Expression Library (TRE)
    [http://laurikari.net/tre/] version 0.8.0.
  * zlib
    [http://www.zlib.net]

They will need to be available on your system before fqgrep can be
installed.

    TRE
    ===

    On Ubuntu (or any other Debian-based Linux distribution):

        # as the root user:
        apt-get install libtre-dev libtre5

    On Mac OS X ( via macports [http://www.macports.org/] ):

        sudo port install tre

    For other installation alternatives please visit the following web site:

        http://laurikari.net/tre/download/

    zlib
    ====

    On Ubuntu (or any other Debian-based Linux distribution):

        # as the root user
        apt-get install zlib1g zlib1g-dev

INSTALLATION
============

The installation process currently consists of a very simple Makefile.

Just do the following:

git clone git://github.com/indraniel/fqgrep.git;
cd fqgrep;
make; # try 'make genome'   if at the Genome Center at Washington University
      #                     or would like to an executable with all the relevant
      #                     libraries statically compiled into the executable
      #
      # try 'make macports' if installing on Mac OS X and you installed the
      #                     TRE library via macports (http://www.macports.org/)

The 'fqgrep' executable should be in the working directory.
Afterwards, you can move the executable to wherever you wish.

NOTES
=====

When simply searching for exact sequence patterns, or in other
words, when zero mismatches on a pattern are specified (the default
case), the Boyer-Moore approach (as used similarly by grep) is
taken.

If you would like to search for an exact pattern via a regular
expression, please use the '-e' option.

For approximate pattern matching, the TRE library is being used.

The TRE library uses a variant of Bitap algorithm
(http://en.wikipedia.org/wiki/Bitap_algorithm) for approximate
string matches.  Below is an excerpt from the TRE README describing
the notions behind the bitap algorithm:

   Approximate pattern matching allows matches to be approximate, that
   is, allows the matches to be close to the searched pattern under
   some measure of closeness. TRE uses the edit-distance measure (also
   known as the Levenshtein distance) where characters can be
   inserted, deleted, or substituted in the searched text in order to
   get an exact match. Each insertion, deletion, or substitution adds
   the distance, or cost, of the match. TRE can report the matches
   which have a cost lower than some given threshold value. TRE can
   also be used to search for matches with the lowest cost.

These above mentioned insertion, deletion, and substitution cost
parameters can be adjusted by the -m, -s. -i, -d, -S, -I, -D options
to fqgrep.  The exact costs for each match can be observed via the
detailed report (the -r option to fqgrep).

fqgrep does not use an alignment strategy for sequence searching.

fqgrep-trim.pl
--------------

Based upon fqgrep, one could build sequence demultiplexers and trimmers.
For the case of adaptor trimming, an example is provided in the
"scripts" subdirectory of the git repository.

The example trimmer, written in PERL, is called 'fqgrep-trim.pl'. It
can perform a "left" or "right"-based adaptor trimming based upon an
input FASTQ or FASTA file, and an adaptor pattern (which can be a
regular expression). Please try a "perldoc scripts/fqgrep-trim.pl" to
see its full documentation.

To get fqgrep-trim.pl to work you may need to install the "Path::Class"
module (found on CPAN) onto your system.

As the root user, please try the following terminal command for
"Path::Class" installation:

     cpan Path::Class


AUTHOR
======

Indraniel Das (indraniel at gmail dot com)

ACKNOWLEDGEMENTS
================

This software was developed at the Genome Center at Washington
University, St. Louis, MO.

DISCLAIMER
==========

This software is provided "as is" without warranty of any kind.


January 28, 2011
